/*
 * This file is generated by jOOQ.
 */
package com.example.RestaurantManagement.model.tables.records;


import com.example.RestaurantManagement.model.tables.RecipeManagement;

import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecipeManagementRecord extends UpdatableRecordImpl<RecipeManagementRecord> implements Record4<Integer, String, String, OffsetDateTime> {

    private static final long serialVersionUID = 1256500728;

    /**
     * Setter for <code>public.recipe_management.recipe_id</code>.
     */
    public void setRecipeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.recipe_management.recipe_id</code>.
     */
    public Integer getRecipeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.recipe_management.recipe_name</code>.
     */
    public void setRecipeName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.recipe_management.recipe_name</code>.
     */
    public String getRecipeName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.recipe_management.cuisine</code>.
     */
    public void setCuisine(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.recipe_management.cuisine</code>.
     */
    public String getCuisine() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.recipe_management.cook_time</code>.
     */
    public void setCookTime(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.recipe_management.cook_time</code>.
     */
    public OffsetDateTime getCookTime() {
        return (OffsetDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, OffsetDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, OffsetDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return RecipeManagement.RECIPE_MANAGEMENT.RECIPE_ID;
    }

    @Override
    public Field<String> field2() {
        return RecipeManagement.RECIPE_MANAGEMENT.RECIPE_NAME;
    }

    @Override
    public Field<String> field3() {
        return RecipeManagement.RECIPE_MANAGEMENT.CUISINE;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return RecipeManagement.RECIPE_MANAGEMENT.COOK_TIME;
    }

    @Override
    public Integer component1() {
        return getRecipeId();
    }

    @Override
    public String component2() {
        return getRecipeName();
    }

    @Override
    public String component3() {
        return getCuisine();
    }

    @Override
    public OffsetDateTime component4() {
        return getCookTime();
    }

    @Override
    public Integer value1() {
        return getRecipeId();
    }

    @Override
    public String value2() {
        return getRecipeName();
    }

    @Override
    public String value3() {
        return getCuisine();
    }

    @Override
    public OffsetDateTime value4() {
        return getCookTime();
    }

    @Override
    public RecipeManagementRecord value1(Integer value) {
        setRecipeId(value);
        return this;
    }

    @Override
    public RecipeManagementRecord value2(String value) {
        setRecipeName(value);
        return this;
    }

    @Override
    public RecipeManagementRecord value3(String value) {
        setCuisine(value);
        return this;
    }

    @Override
    public RecipeManagementRecord value4(OffsetDateTime value) {
        setCookTime(value);
        return this;
    }

    @Override
    public RecipeManagementRecord values(Integer value1, String value2, String value3, OffsetDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RecipeManagementRecord
     */
    public RecipeManagementRecord() {
        super(RecipeManagement.RECIPE_MANAGEMENT);
    }

    /**
     * Create a detached, initialised RecipeManagementRecord
     */
    public RecipeManagementRecord(Integer recipeId, String recipeName, String cuisine, OffsetDateTime cookTime) {
        super(RecipeManagement.RECIPE_MANAGEMENT);

        set(0, recipeId);
        set(1, recipeName);
        set(2, cuisine);
        set(3, cookTime);
    }
}
