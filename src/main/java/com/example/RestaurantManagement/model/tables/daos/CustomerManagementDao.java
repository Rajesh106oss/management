/*
 * This file is generated by jOOQ.
 */
package com.example.RestaurantManagement.model.tables.daos;


import com.example.RestaurantManagement.model.tables.CustomerManagement;
import com.example.RestaurantManagement.model.tables.records.CustomerManagementRecord;

import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerManagementDao extends DAOImpl<CustomerManagementRecord, com.example.RestaurantManagement.model.tables.pojos.CustomerManagement, Integer> {

    /**
     * Create a new CustomerManagementDao without any configuration
     */
    public CustomerManagementDao() {
        super(CustomerManagement.CUSTOMER_MANAGEMENT, com.example.RestaurantManagement.model.tables.pojos.CustomerManagement.class);
    }

    /**
     * Create a new CustomerManagementDao with an attached configuration
     */
    public CustomerManagementDao(Configuration configuration) {
        super(CustomerManagement.CUSTOMER_MANAGEMENT, com.example.RestaurantManagement.model.tables.pojos.CustomerManagement.class, configuration);
    }

    @Override
    public Integer getId(com.example.RestaurantManagement.model.tables.pojos.CustomerManagement object) {
        return object.getCustomerId();
    }

    /**
     * Fetch records that have <code>customer_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.RestaurantManagement.model.tables.pojos.CustomerManagement> fetchRangeOfCustomerId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CustomerManagement.CUSTOMER_MANAGEMENT.CUSTOMER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>customer_id IN (values)</code>
     */
    public List<com.example.RestaurantManagement.model.tables.pojos.CustomerManagement> fetchByCustomerId(Integer... values) {
        return fetch(CustomerManagement.CUSTOMER_MANAGEMENT.CUSTOMER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>customer_id = value</code>
     */
    public com.example.RestaurantManagement.model.tables.pojos.CustomerManagement fetchOneByCustomerId(Integer value) {
        return fetchOne(CustomerManagement.CUSTOMER_MANAGEMENT.CUSTOMER_ID, value);
    }

    /**
     * Fetch records that have <code>customer_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.RestaurantManagement.model.tables.pojos.CustomerManagement> fetchRangeOfCustomerName(String lowerInclusive, String upperInclusive) {
        return fetchRange(CustomerManagement.CUSTOMER_MANAGEMENT.CUSTOMER_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>customer_name IN (values)</code>
     */
    public List<com.example.RestaurantManagement.model.tables.pojos.CustomerManagement> fetchByCustomerName(String... values) {
        return fetch(CustomerManagement.CUSTOMER_MANAGEMENT.CUSTOMER_NAME, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.RestaurantManagement.model.tables.pojos.CustomerManagement> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(CustomerManagement.CUSTOMER_MANAGEMENT.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.example.RestaurantManagement.model.tables.pojos.CustomerManagement> fetchByEmail(String... values) {
        return fetch(CustomerManagement.CUSTOMER_MANAGEMENT.EMAIL, values);
    }

    /**
     * Fetch records that have <code>ph_no BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.RestaurantManagement.model.tables.pojos.CustomerManagement> fetchRangeOfPhNo(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CustomerManagement.CUSTOMER_MANAGEMENT.PH_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ph_no IN (values)</code>
     */
    public List<com.example.RestaurantManagement.model.tables.pojos.CustomerManagement> fetchByPhNo(Integer... values) {
        return fetch(CustomerManagement.CUSTOMER_MANAGEMENT.PH_NO, values);
    }
}
