/*
 * This file is generated by jOOQ.
 */
package com.example.RestaurantManagement.model.tables.records;


import com.example.RestaurantManagement.model.tables.CustomerManagement;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerManagementRecord extends UpdatableRecordImpl<CustomerManagementRecord> implements Record4<Integer, String, String, Integer> {

    private static final long serialVersionUID = 1922382951;

    /**
     * Setter for <code>public.customer_management.customer_id</code>.
     */
    public void setCustomerId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.customer_management.customer_id</code>.
     */
    public Integer getCustomerId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.customer_management.customer_name</code>.
     */
    public void setCustomerName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.customer_management.customer_name</code>.
     */
    public String getCustomerName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.customer_management.email</code>.
     */
    public void setEmail(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.customer_management.email</code>.
     */
    public String getEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.customer_management.ph_no</code>.
     */
    public void setPhNo(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.customer_management.ph_no</code>.
     */
    public Integer getPhNo() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CustomerManagement.CUSTOMER_MANAGEMENT.CUSTOMER_ID;
    }

    @Override
    public Field<String> field2() {
        return CustomerManagement.CUSTOMER_MANAGEMENT.CUSTOMER_NAME;
    }

    @Override
    public Field<String> field3() {
        return CustomerManagement.CUSTOMER_MANAGEMENT.EMAIL;
    }

    @Override
    public Field<Integer> field4() {
        return CustomerManagement.CUSTOMER_MANAGEMENT.PH_NO;
    }

    @Override
    public Integer component1() {
        return getCustomerId();
    }

    @Override
    public String component2() {
        return getCustomerName();
    }

    @Override
    public String component3() {
        return getEmail();
    }

    @Override
    public Integer component4() {
        return getPhNo();
    }

    @Override
    public Integer value1() {
        return getCustomerId();
    }

    @Override
    public String value2() {
        return getCustomerName();
    }

    @Override
    public String value3() {
        return getEmail();
    }

    @Override
    public Integer value4() {
        return getPhNo();
    }

    @Override
    public CustomerManagementRecord value1(Integer value) {
        setCustomerId(value);
        return this;
    }

    @Override
    public CustomerManagementRecord value2(String value) {
        setCustomerName(value);
        return this;
    }

    @Override
    public CustomerManagementRecord value3(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public CustomerManagementRecord value4(Integer value) {
        setPhNo(value);
        return this;
    }

    @Override
    public CustomerManagementRecord values(Integer value1, String value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomerManagementRecord
     */
    public CustomerManagementRecord() {
        super(CustomerManagement.CUSTOMER_MANAGEMENT);
    }

    /**
     * Create a detached, initialised CustomerManagementRecord
     */
    public CustomerManagementRecord(Integer customerId, String customerName, String email, Integer phNo) {
        super(CustomerManagement.CUSTOMER_MANAGEMENT);

        set(0, customerId);
        set(1, customerName);
        set(2, email);
        set(3, phNo);
    }
}
